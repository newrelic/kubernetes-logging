{{- if (include "newrelic-logging.areValuesValid" .) }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels: {{ include "newrelic-logging.labels" . | indent 4 }}
  name: {{ template "newrelic-logging.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      app: {{ template "newrelic-logging.name" . }}
      release: {{.Release.Name }}
  template:
    metadata:
    {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8}}
    {{- end }}
      labels:
        app: {{ template "newrelic-logging.name" . }}
        release: {{.Release.Name }}
        app.kubernetes.io/name: {{ template "newrelic-logging.name" . }}
        {{- if .Values.podLabels}}
        {{ toYaml .Values.podLabels }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "newrelic-logging.serviceAccountName" . }}
      hostNetwork: true # This option is a requirement for the Infrastructure Agent to report the proper hostname in New Relic.
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ template "newrelic-logging.name" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: ENDPOINT
              {{- if eq (substr 0 2 (include "newrelic-logging.licenseKey" .)) "eu" }}
              value: "https://log-api.eu.newrelic.com/log/v1"
              {{- else }}
              value: "https://log-api.newrelic.com/log/v1"
              {{- end }}
            - name: SOURCE
              value: "kubernetes"
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  {{- if (include "newrelic-logging.licenseKey" .) }}
                  name: {{ template "newrelic-logging.fullname" . }}-config
                  key: license
                  {{- else }}
                  name: {{ include "newrelic-logging.customSecretName" . }}
                  key: {{ include "newrelic-logging.customSecretKey" . }}
                  {{- end }}
            - name: BUFFER_SIZE
              value: {{ .Values.fluentBit.bufferSize | quote }}
            - name: MAX_RECORDS
              value: {{ .Values.fluentBit.maxRecords| quote }}
            - name: LOG_LEVEL
              value: {{ .Values.fluentBit.logLevel | quote }}
            - name: PATH
              value: {{ .Values.fluentBit.path | quote }}
          command:
            - /fluent-bit/bin/fluent-bit
            - -c
            - /fluent-bit/etc/fluent-bit.conf
            - -e
            - /fluent-bit/bin/out_newrelic.so
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
            - name: var
              mountPath: /var
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
      volumes:
        - name: fluent-bit-config
          configMap:
            name: {{ template "newrelic-logging.fluentBitConfig" . }}
        - name: var
          hostPath:
            path: /var
      {{- if $.Values.priorityClassName }}
      priorityClassName: {{ $.Values.priorityClassName }}
      {{- end }}
      {{- if $.Values.nodeSelector }}
      nodeSelector:
{{ toYaml $.Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
{{- end }}
